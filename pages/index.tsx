import type { NextPage } from "next";
import { SyntheticEvent, useContext, useEffect, useState } from "react";
import Head from "next/head";
import styles from "../styles/Index.module.css";
import Header from "../components/front/header/header.component";
import Mainsection from "../components/front/mainsection/mainsection.component";
import UsersSection from "../components/front/userssection/userssection.component";
import CompletedProjects from "../components/front/completedprojects/completed-projects.component";
import AboutUs from "../components/front/aboutus/about-us.component";
import Footer from "../components/front/footer/footer.component";
import { localeContext } from "../context/locale-context";
import Modal from "../components/modal/modal.component";
import { FormPropsInterface } from "../config/interfaces/app.interfaces";

const Home: NextPage = (props: any) => {
  const [localeKey, setLocaleKey] = useState("");
  const [dictionary, setDictionary] = useState(null);
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [modalKey, setModalKey] = useState("");
  const [currentProject, setCurrentProject] = useState(null);
  const localeContextObject: any = useContext(localeContext);
  useEffect(() => {
    setLocaleKey(localeContextObject.localeKey);
    setDictionary(localeContextObject.dictionary);
  }, [localeContextObject]);

  const ModalCloseHendler = () => {
    setIsModalOpen(false);
  };
  const footerProps = {
    dyctionary: dictionary,
    key: localeKey,
  };
  const formInputs = [
    {
      id: "001",
      type: "text",
      name: "fullname",
      className: "form-input",
      placeholder: dictionary
        ? dictionary[localeKey]["fullName"]
        : "სახელი და გვარი",
      needCommonParent: true,
    },
    {
      id: "002",
      type: "text",
      name: "phone",
      className: "form-input",
      placeholder: dictionary ? dictionary[localeKey]["phone"] : "ტელეფონი",
      needCommonParent: true,
    },
    {
      id: "003",
      type: "email",
      name: "email",
      className: "form-input",
      placeholder: dictionary ? dictionary[localeKey]["email"] : "ელ.ფოსტა",
      needCommonParent: false,
    },
  ];
  const formTextareas = [
    {
      textareaClass: "form_textarea",
      textareaName: "message",
      textareaPlaceholder: dictionary
        ? dictionary[localeKey]["message"]
        : "შეტყობინება",
    },
  ];

  const close = {
    closeClassname: "modal_close",
    closeLogoClassname: "modal_close_logo",
    closeSrc: "/images/close.svg",
    hendler: ModalCloseHendler,
  };

  const formProps: FormPropsInterface = {
    needClose: true,
    ...close,
    formClassName: "form",
    inputs: formInputs,
    inputsCommonParentClass: "inputs_common_parent",
    needTextareas: true,
    textareas: formTextareas,
    needButton: true,
    buttonClass: "form_button",
    buttonText: dictionary ? dictionary[localeKey]["send"] : "გაგზავნა",
    ButtoncallBack: (e: SyntheticEvent) => {
      e.preventDefault();
    },
  };
  const modalProps = {
    modal_title: "ჩვენს შესახებ",
    FormProps: formProps,
    isOpen: isModalOpen,
    key: modalKey,
    currentproject: currentProject,
    needClose: true,
    ...close,
  };
  return (
    <div className="conteiner">
      <Modal modalprops={modalProps} />
      <Head>
        <title>გამტანერი</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.header}>
        <Header setismodalopen={setIsModalOpen} setModalKey={setModalKey} />
      </div>
      <section className={styles.main_section}>
        <Mainsection
          setismodalopen={setIsModalOpen}
          setModalKey={setModalKey}
        />
      </section>
      <section className={styles.users_section}>
        <div>
          <UsersSection users={props.ourUsers} />
        </div>
      </section>
      <section className={styles.projects_section}>
        <CompletedProjects
          setismodalopen={setIsModalOpen}
          setModalKey={setModalKey}
          setcurrentproject={setCurrentProject}
          projects={props.projects}
        />
      </section>
      <section className={styles.about_us_section}>
        <AboutUs data={props.aboutus} />
      </section>
      <section className={styles.footer_section}>
        <Footer
          dictionary={footerProps.dyctionary}
          localeKey={footerProps.key}
          contacts={props.contacts}
        />
      </section>
    </div>
  );
};

export async function getServerSideProps({ req }) {
  const projects = await fetch(
    "http://localhost:3000/api/client/projects/getall",
    {
      method: "GET",
      headers: {
        "Content-Type": "application/json",
      },
    }
  )
    .then((response) => response.json())
    .then((data) => data);
  const ourUsers = await fetch(
    "http://localhost:3000/api/client/users/getall",
    {
      method: "GET",
      headers: {
        "Content-Type": "application/json",
      },
    }
  )
    .then((response) => response.json())
    .then((data) => data);

  const contacts = await fetch(
    "http://localhost:3000/api/client/contacts/get",
    {
      method: "GET",
      headers: {
        "Content-Type": "application/json",
      },
    }
  )
    .then((response) => response.json())
    .then((data) => data);

  const aboutus = await fetch("http://localhost:3000/api/client/aboutus/get", {
    method: "GET",
    headers: {
      "Content-Type": "application/json",
    },
  })
    .then((response) => response.json())
    .then((data) => data);

  return {
    props: {
      projects: projects.resource,
      ourUsers: ourUsers.resource,
      contacts: contacts.resource,
      aboutus: aboutus.resource,
    },
  };
}

export default Home;
